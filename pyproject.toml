[tool.poetry]
name = "fasttrackapi-projeto-prisma"
version = "0.1.0"
description = "API para gerenciamento de eventos com FastAPI, utilizando boas práticas de desenvolvimento backend."
authors = ["Seu Nome <you@example.com>"]
readme = "README.md"
packages = [{ include = "app" }]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.110.0"
uvicorn = {extras = ["standard"], version = "^0.35.0"}
sqlalchemy = ">=2.0,<2.1"
alembic = "^1.13.0"
pydantic = "^2.0"
python-dotenv = "^1.0.0"
typing-extensions = "^4.10.0"
python-jose = {extras = ["cryptography"], version = "^3.4.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
pydantic-settings = "^2.9.1"
bcrypt = "<4.0"
python-multipart = "^0.0.20"
redis = "^5.0"
structlog = "^25.4.0"
psycopg2-binary = "^2.9.10"
email-validator = "^2.2.0"
prometheus-fastapi-instrumentator = "^7.1.0"
opentelemetry-api = "^1.34.1"
opentelemetry-sdk = "^1.34.1"
opentelemetry-exporter-jaeger = "^1.21.0"
opentelemetry-instrumentation-fastapi = "^0.55b1"
deprecated = "^1.2.18"
secure = "0.2.1"
slowapi = "^0.1.9"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
ruff = "^0.2.0"
mypy = "^1.8.0"
httpx = "^0.28.1"
fakeredis = "^2.21"
bandit = "^1.8.3"
pyupgrade = "^3.20.0"
types-python-jose = "^3.5.0.20250531"
types-passlib = "^1.7.7.20250602"
structlog = "^25.4.0"
trio = "^0.30.0"
rich = "^14.0.0"
sqlalchemy2-stubs = "^0.0.2a38"
sqlalchemy = {version = ">=2", extras = ["mypy"]}
pytest-asyncio = "^1.1.0"

[tool.mypy]
# python_version = 3.12
# strict                 = true   # ativa todas as verificações estritas
ignore_missing_imports = true   # ignora libs sem stub
check_untyped_defs     = true   # também analisa funções sem hints
# plugins = pydantic.mypy     # se você usa Pydantic v1; remova se for v2
warn_unused_ignores    = true

# Desative, por ora, as regras mais duras
disallow_untyped_defs  = false  # permite funções sem hints
disallow_untyped_calls = false  # permite chamar Any
disallow_incomplete_defs = false
strict_optional        = true   # mantenha verificação de None

# plugins = ["sqlalchemy.ext.mypy.plugin"]

[tool.ruff]
line-length = 250               # segue no nível raiz (formatação)

[tool.ruff.lint]                # ⬅️ tudo abaixo diz respeito ao *linter*
select = ["E", "F", "I", "UP"]   # incluí "D" para docstrings
ignore = ["E241", "E302", "E231", "E226", "E261", "E262", "E305", "E251", "I001"]                           # exemplo: allow unused import
extend-ignore = ["D203", "D213"]      # (explico no ponto 2)
preview = true                        # já usa as regras “next-gen”

# [tool.ruff.exclude]
# extend = ["migrations", "scripts"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
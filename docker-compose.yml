# docker-compose.yml
version: "3.9"

services:
  # api_prisma:
  #   build: .
  #   volumes:
  #     - .:/app
  #   ports:
  #     - "8000:8000"
  #   # Sempre lemos o .env "base" + o específico
  #   env_file:
  #     - .env
  #     - .env.${ENV:-dev}
  #   command: >
  #     sh -c "uvicorn app.main:app --host 0.0.0.0 --port 8000"
  #   # command: uvicorn app.main:app --host 0.0.0.0 --port 8000
  #   depends_on:
  #     - db
  #     - redis                  # ← espera o Redis ficar “healthy”
  #   networks:
  #     - backend

  db:
    image: postgres:16-alpine
    container_name: prisma-db
    restart: always
    environment:
      POSTGRES_USER: prisma
      POSTGRES_PASSWORD: prisma123
      POSTGRES_DB: prisma_db
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  #   networks:
  #     - backend

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: >
      redis-server
      --save 60 1             # snapshot a cada 60 s / 1 mudança
      --loglevel warning
  #  command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
  #  networks:
  #     - backend
    ports:
      - "6379:6379"           # opcional em dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
  #   # opcional: volume se quiser persistir
  #   # volumes:
  #   #   - redis_data:/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: prisma-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@prisma.com"
      PGADMIN_DEFAULT_PASSWORD: "admin123"
    ports:
      - "5050:80"
    depends_on:
      - db
  #   networks:
  #     - backend

# networks:
#   backend:

volumes:
  prisma_db_data:
